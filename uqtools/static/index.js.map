{"version":3,"sources":["webpack:///webpack/bootstrap 7177bc241300b5f23211","webpack:///./src/index.js","webpack:///./src/Figure.js","webpack:///external \"jupyter-js-widgets\"","webpack:///./~/underscore/underscore.js","webpack:///(webpack)/buildin/module.js","webpack:///./package.json"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACXA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,iE;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA,uBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA,uBAAsB,iBAAiB;AACvC;AACA;AACA,MAAK;;AAEL;AACA;AACA,0BAAyB,iBAAiB;AAC1C,MAAK;;AAEL;AACA;AACA,0BAAyB,iBAAiB;AAC1C,MAAK;;AAEL;AACA;AACA,0BAAyB,iBAAiB;AAC1C,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL,EAAC;;;AAGD;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,uBAAsB,sBAAsB;AAC5C;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA,qBAAoB;AACpB;AACA,+BAA8B,eAAe,uCAAuC;AACpF;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,U;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA,2DAA0D;AAC1D;AACA,MAAK;;;AAGL;AACA;AACA;AACA,oBAAmB,oCAAoC;AACvD,MAAK;;AAEL,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,M;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,U;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,yBAAwB;AACxB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,uCAAsC,kCAAkC;AACxE,yCAAwC,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,oCAAmC,wCAAwC;AAC3E;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,oCAAmC,2BAA2B;AAC9D;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA,qDAAoD,OAAO;AAC3D;AACA;AACA;AACA;AACA,8CAA6C;AAC7C,kEAAiE;AACjE;AACA;AACA,wBAAuB;AACvB;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kDAAiD,eAAe;AAChE;AACA;AACA;AACA;AACA,sCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,kD;AACA,UAAS;AACT;AACA;AACA,uBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;AACA;AACA,G;;;;;;ACtvBA,gD;;;;;;iECAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,YAAY;AAClD;AACA;AACA,MAAK;AACL;AACA,wCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAkD;AAClD,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,yCAAwC;AACxC,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,+CAA8C,YAAY;AAC1D;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA6C,YAAY;AACzD;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAqB,cAAc;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO,eAAe;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,sBAAqB,eAAe;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAAyC,YAAY;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,gBAAgB;AACzC;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAAyC,YAAY;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,0CAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAqD;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf,eAAc;AACd,eAAc;AACd,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP,sBAAqB;AACrB;;AAEA;AACA;AACA,MAAK;AACL,kBAAiB;;AAEjB;AACA,mDAAkD,EAAE,iBAAiB;;AAErE;AACA,yBAAwB,8BAA8B;AACtD,4BAA2B;;AAE3B;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAkD,iBAAiB;;AAEnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;;;;;;;;AC3pDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA,mBAAkB,6LAA6L,4EAA4E,oBAAoB,4CAA4C,iBAAiB,qD","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7177bc241300b5f23211","// Entry point for the notebook bundle containing custom model definitions.\r\n//\r\n// Setup notebook base URL\r\n//\r\n// Some static assets may be required by the custom widget javascript. The base\r\n// url for the notebook is not known at build time and is therefore computed\r\n// dynamically.\r\n__webpack_public_path__ = document.querySelector('body').getAttribute('data-base-url') + 'nbextensions/uqtools/';\r\n\r\n// Export widget models and views, and the npm package version number.\r\nmodule.exports = require('./Figure.js');\r\nmodule.exports['version'] = require('../package.json').version;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","var widgets = require('jupyter-js-widgets');\r\nvar _ = require('underscore');\r\n\r\nfunction Axes(view, ax) {\r\n    // copy attributes: index, limits, navigable, zoomable, polar\r\n    $.extend(this, ax);\r\n    // calculate bbox\r\n    if (this.polar) {\r\n        this.rxy = this.x_max - this.x_min;\r\n        this.ruv = this.v_max - this.v_min;\r\n        this.x_min = this.x_min - this.rxy - 1;\r\n        this.x_max = this.x_max - 2; \r\n        this.y_min = this.y_min + this.rxy - 1;\r\n        this.y_max = this.y_min - 2*this.rxy - 1;\r\n    } else {\r\n        this.xscale = this.x_max - this.x_min;\r\n        this.yscale = this.y_min - this.y_max;\r\n        this.uscale = this.u_max - this.u_min;\r\n        this.vscale = this.v_max - this.v_min;\r\n    }\r\n    // create in DOM\r\n    this.$el = $('<div />')\r\n        .addClass('Axes')\r\n        .css('position', 'absolute')\r\n        .css('left', this.x_min)\r\n        .css('top', this.y_max)\r\n        .css('width', this.x_max - this.x_min)\r\n        .css('height', this.y_min - this.y_max)\r\n        .css('border-radius', this.polar ? '100%' : 'none')\r\n        .appendTo(view.$el);\r\n    \r\n    this.destroy = function() {\r\n        this.$el.remove();\r\n    }\r\n    \r\n    this.mouseXY = function(event, clip) {\r\n        /**\r\n         * transform MouseEvent clientX/clientY to subplot X/Y\r\n         */\r\n        var rect = this.$el[0].getBoundingClientRect();\r\n        var x = event.clientX - rect.left,\r\n            y = event.clientY - rect.top;\r\n        if((clip != undefined) && (!clip)) {\r\n            return [x, y];\r\n        } else {\r\n            return [Math.max(0, Math.min(rect.width, x)),\r\n                    Math.max(0, Math.min(rect.height, y))];\r\n        }\r\n    }\r\n    \r\n    this.mouseXIn = function(event) {\r\n        var rect = this.$el[0].getBoundingClientRect();\r\n        return (event.clientX >= rect.left) && (event.clientX <= rect.right);\r\n    }\r\n    \r\n    this.mouseYIn = function(event) {\r\n        var rect = this.$el[0].getBoundingClientRect();\r\n        return (event.clientY >= rect.top) && (event.clientY <= rect.bottom);\r\n    }\r\n\r\n    this.mouseIn = function(event) {\r\n        var rect = this.$el[0].getBoundingClientRect();\r\n        return ((event.clientX >= rect.left) && (event.clientX <= rect.right) &&\r\n                (event.clientY >= rect.top) && (event.clientY <= rect.bottom));\r\n    }\r\n    \r\n    this.transform = function(u, v) {\r\n        /**\r\n         * tranform user coordinates into pixel coordinates relative to \r\n         * the top left corner of ax\r\n         */\r\n        if (this.polar) {\r\n            return [this.rxy + v*this.rxy/this.ruv * Math.cos(u),\r\n                    this.rxy - v*this.rxy/this.ruv * Math.sin(u)];\r\n        } else {\r\n            return [(u - this.u_min) / this.uscale * this.xscale,\r\n                    (1 - (v - this.v_min) / this.vscale) * this.yscale];\r\n        }\r\n    }\r\n    \r\n    this.transformInverse = function(x, y) {\r\n        /**\r\n         * transform pixel x, y relative to the top left corner of\r\n         * ax into user coordinates\r\n         */\r\n        if (this.polar) {\r\n            var\txt = x - this.rxy,\r\n                yt = y - this.rxy,\r\n                u = (Math.atan2(-yt, xt) + 2*Math.PI) % (2*Math.PI),\r\n                v = Math.sqrt(xt*xt + yt*yt) / this.rxy*this.ruv;\r\n            return [u, v];\r\n        } else {\r\n            return [this.u_min + x / this.xscale * this.uscale,\r\n                    this.v_max - y / this.yscale * this.vscale]; \r\n        }\r\n    }\r\n}\r\n\r\n\r\nvar FigureView = widgets.DOMWidgetView.extend({\r\n    render: function() {\r\n        /**\r\n         * Create plot image\r\n         */\r\n        //console.log('ConsoleView render');\r\n        this.$el.addClass('Figure');\r\n        // force position\r\n        this.$el\r\n            .css('position', 'relative')\r\n            .on('remove', this, this.figureClose);\r\n        this.$image = $('<img />').appendTo(this.$el);\r\n        // create context menu\r\n        this.$menu = $('<menu />')\r\n            .attr('type', 'context')\r\n            .attr('id', (Math.random()*(1<<64)).toString(16).substr(2))\r\n            .appendTo(this.$el);\r\n        $('<menuitem />')\r\n            .attr('label', 'Print to notebook')\r\n            .on('click', this, this.figurePrint)\r\n            .appendTo(this.$menu);\r\n        $('<menuitem />')\r\n            .attr('label', 'Clear cell output')\r\n            .on('click', this, this.figureClear)\r\n            .appendTo(this.$menu);\r\n        this.$el.attr('contextmenu', this.$menu[0].id);\r\n        // create axes\r\n        this.axes = [];\r\n        this.figureUpdate();\r\n    },\r\n    \r\n    figureUpdate: function() {\r\n        /**\r\n         * Update plot image, create subplot divs\r\n         */\r\n        // show image\r\n        var image_src = ('data:image/' + this.model.get('_format') + \r\n                         ';base64,' + this.model.get('_b64image'));\r\n        this.$image.attr('src', image_src);\r\n        // delete all subplots\r\n        for(var idx=0; idx<this.axes.length; idx++) {\r\n            this.axes[idx].destroy();\r\n        }\r\n        this.axes = [];\r\n        // re-create subplots\r\n        var axes = this.model.get('axes');\r\n        for(var idx=0; idx<axes.length; idx++) {\r\n            this.axes[idx] = new Axes(this, axes[idx]);\r\n        }\r\n    },\r\n    \r\n    figurePrint: function(event) {\r\n        // send print event to python\r\n        event.data.send({'event': 'print'});\r\n    },\r\n    \r\n    figureClear: function(event) {\r\n        // sent clear event to python\r\n        event.data.send({'event': 'clear'});\r\n    },\r\n    \r\n    figureClose: function(event) {\r\n        // send close event to python\r\n        event.data.send({'event': 'close'});\r\n    },\r\n    \r\n    update: function() {\r\n        //console.log('FigureView update');\r\n        FigureView.__super__.update.apply(this);\r\n        this.figureUpdate();\r\n    },\r\n\r\n});\r\n\r\n\r\nvar ZoomFigureView = FigureView.extend({\r\n    render: function() {\r\n        ZoomFigureView.__super__.render.apply(this);\r\n        this.zoomUpdate();\r\n    },\r\n\r\n    zoomUpdate: function() {\r\n        /**\r\n         * install event handlers for zoomable axes\r\n         */\r\n        for(var idx=0; idx<this.axes.length; idx++) {\r\n            var ax = this.axes[idx];\r\n            if (ax.zoomable) {\r\n                var data = {view: this, ax: ax};\r\n                ax.$el\r\n                    .css('cursor', 'crosshair')\r\n                    .on('mousedown', data, this.zoomStart)\r\n            }\r\n        }\r\n    },\r\n    \r\n    update: function() {\r\n        ZoomFigureView.__super__.update.apply(this);\r\n        this.zoomUpdate();\r\n    },\r\n\r\n    zoomStart: function(event) {\r\n        /**\r\n         * Start dragging a zoom window\r\n         */\r\n        //console.log('zoomStart');\r\n        var view = event.data.view, \r\n            ax = event.data.ax;\r\n        // only run when the main mouse button is pressed\r\n        if (event.button != 0) {\r\n            return;\r\n        }\r\n        // prevent text selection\r\n        event.preventDefault();\r\n        window.getSelection().removeAllRanges();\r\n        // handle double click\r\n        if ((event.timeStamp != undefined) && (event.timeStamp != 0)) {\r\n            // run a zoomReset if time between successive mouseDown events \r\n            // was less than 250ms\r\n            if ((view.timeStamp != undefined) && \r\n                (event.timeStamp - view.timeStamp < 250)) {\r\n                view.zoomReset(event);\r\n                return;\r\n            }\r\n            view.timeStamp = event.timeStamp;\r\n        }\r\n        // create zoom overlay\r\n        var rect = event.target.getBoundingClientRect();\r\n        var canvas = $('<canvas />')\r\n            .css('position', 'absolute')\r\n            .css('left', 0)\r\n            .css('top', 0)\r\n            .css('width', '100%')\r\n            .css('height', '100%')\r\n            .attr('width', rect.width)\r\n            .attr('height', rect.height)\r\n            .appendTo(event.target);\r\n        // save starting point\r\n        var zoom = {start: null, end: null};\r\n        zoom.start = ax.mouseXY(event);\r\n        var keys = {alt: false, shift: false, ctrl: false};\r\n        // install event handlers\r\n        var data = $.extend({}, event.data, {canvas: canvas, zoom: zoom, keys: keys});\r\n        $(document).on('mousemove', data, view.zoomMove);\r\n        $(document).one('mouseup', data, view.zoomFinish);\r\n        $(document).on('keydown keyup', data, view.zoomKeyDown);\r\n    },\r\n\r\n    zoomMove: function(event) {\r\n        /**\r\n         * Resize zoom window according to mouse position\r\n         */\r\n        var view = event.data.view,\r\n            ax = event.data.ax,\r\n            zoom = event.data.zoom;\r\n        zoom.end = ax.mouseXY(event);\r\n        view.zoomDraw(event);\r\n    },\r\n    \r\n    zoomDraw: function(event) {\r\n        /*\r\n         * Draw zoom window\r\n         */\r\n        var ax = event.data.ax,\r\n            zoom = event.data.zoom,\r\n            keys = event.data.keys,\r\n            canvas = event.data.canvas;\r\n        // draw zoom rectangle\r\n        var rect = canvas[0].getBoundingClientRect();\r\n        var ctx = canvas[0].getContext('2d');\r\n        ctx.fillStyle = \"rgba(0,0,0,0.1)\";\r\n        ctx.clearRect(0, 0, rect.width, rect.height);\r\n        ctx.fillRect(0, 0, rect.width, rect.height);\r\n        var x = Math.min(zoom.start[0], zoom.end[0]),\r\n            y = Math.min(zoom.start[1], zoom.end[1]),\r\n            w = Math.abs(zoom.start[0] - zoom.end[0]),\r\n            h = Math.abs(zoom.start[1] - zoom.end[1]);\r\n        if (keys.ctrl) {\r\n            y = 0;\r\n            h = rect.height;\r\n        }\r\n        if (keys.shift) {\r\n            x = 0;\r\n            w = rect.width;\r\n        }\r\n        ctx.clearRect(x, y, w, h);\r\n        ctx.strokeRect(x, y, w, h);\r\n    },\r\n    \r\n    zoomKeyDown: function(event) {\r\n        var view = event.data.view,\r\n            keys = event.data.keys;\r\n        if (event.which == 27) {\r\n            view.zoomAbort(event);\r\n            event.stopPropagation();\r\n        }\r\n        // redraw when any of the modifier keys is depressed\r\n        if ((event.shiftKey != keys.shift) || \r\n            (event.ctrlKey != keys.ctrl) || \r\n            (event.altKey != keys.alt)) {\r\n            keys.shift = event.shiftKey;\r\n            keys.alt = event.altKey;\r\n            keys.ctrl = event.ctrlKey;\r\n            view.zoomDraw(event);\r\n        } \r\n    },\r\n    \r\n    zoomAbort: function(event) {\r\n        //console.log('zoomAbort');\r\n        var view = event.data.view;\r\n        // disable event handlers\r\n        $(document).off('mousemove', view.zoomMove);\r\n        $(document).off('mouseup', view.zoomFinish);\r\n        $(document).off('keydown keyup', view.zoomKeyDown);\r\n        // remove zoom box\r\n        event.data.canvas.remove();\r\n    },\r\n\r\n    zoomFinish: function(event) {\r\n        //console.log('zoomFinish');\r\n        var view = event.data.view,\r\n            ax = event.data.ax,\r\n            keys = event.data.keys,\r\n            zoom = event.data.zoom;\r\n        // clear zoom box and event handlers\r\n        view.zoomAbort(event);\r\n        // check for non-zero zoom area\r\n        zoom.end = ax.mouseXY(event);\r\n        if ((zoom.start[0] != zoom.end[0]) && \r\n            (zoom.start[1] != zoom.end[1])) {\r\n            // transform zoom rectangle into user coordinates\r\n            var x_min = Math.min(zoom.start[0], zoom.end[0]),\r\n                x_max = Math.max(zoom.start[0], zoom.end[0]),\r\n                y_min = Math.max(zoom.start[1], zoom.end[1]),\r\n                y_max = Math.min(zoom.start[1], zoom.end[1]);\r\n            var uv_min = ax.transformInverse(x_min, y_min),\r\n                uv_max = ax.transformInverse(x_max, y_max);\r\n            if (keys.ctrl) {\r\n                uv_min[1] = ax.v_min;\r\n                uv_max[1] = ax.v_max;\r\n            }\r\n            if (keys.shift) {\r\n                uv_min[0] = ax.u_min;\r\n                uv_max[0] = ax.u_max;\r\n            }\r\n            // update model\r\n            view.send({event: 'zoom', \r\n                       axis: ax.index, \r\n                       u_min: uv_min[0], u_max: uv_max[0], \r\n                       v_min: uv_min[1], v_max: uv_max[1]});\r\n        }\r\n    },\r\n    \r\n    \r\n    zoomReset: function(event) {\r\n        //console.log('zoomReset');\r\n        var view = event.data.view, ax = event.data.ax;\r\n        view.send({event: 'zoom_reset', axis: ax.index});\r\n    },\r\n\r\n});\r\n\r\n\r\nvar Cursor = Backbone.Model.extend({\r\n    defaults: {\r\n        'template': false,\r\n        'direction': 3,\r\n        'position': [null, null],\r\n    },\r\n    \r\n    validate: function(attr, options) {\r\n        /**\r\n         * Check if coordinates are within the axes.\r\n         */\r\n        var u = attr.position[0], v = attr.position[1];\r\n        if ((u != null) && ((u < attr.ax.u_min) || (u > attr.ax.u_max)) ||\r\n            (v != null) && ((v < attr.ax.v_min) || (v > attr.ax.v_max))) {\r\n            return '!';\r\n        }\r\n    return null;\r\n    }\r\n});\r\n\r\nvar CursorCollection = Backbone.Collection.extend({\r\n    model: Cursor,\r\n    \r\n    initialize: function(models, options) {\r\n        /**\r\n         * Store ax.\r\n         */\r\n        this.ax = options.ax;\r\n    }        \r\n});\r\n\r\nvar CursorView = Backbone.View.extend({\r\n    // TODO: ax must be provided to the constructor, how to check?\r\n    \r\n    events: {\r\n        'mousedown .hRuler': 'grab',\r\n        'mousedown .vRuler': 'grab',\r\n        'mousedown .iRuler': 'grab',\r\n    },\r\n    \r\n    render: function() {\r\n        /**\r\n         * Create a new cursor in the DOM\r\n         *\r\n         * Input:\r\n         *   ax (object) - associated Axes\r\n         *   direction (int) - 1: vertical, 2: horizontal, 3: both\r\n         *   labels (bool) - show labels\r\n         * Return:\r\n         *   jQuery selector of the cursor group\r\n         */\r\n        var ax = this.model.get('ax'),\r\n            template = this.model.get('template'),\r\n            direction = this.model.get('direction');\r\n\r\n        // create DOM elements\r\n        this.$el\r\n            .addClass('Cursor')\r\n            .attr('hidden', !this.model.isValid());\r\n        if (ax.polar) {\r\n            this.$el\r\n                .css('border-radius', '100%');\r\n        }\r\n        if (direction & 1) {\r\n            $('<div />')\r\n                .addClass('hRuler')\r\n                .css('position', 'absolute')\r\n                .appendTo(this.$el);\r\n            if(!template) {\r\n                $('<div />')\r\n                    .addClass('hLabel')\r\n                    .css('position', 'absolute')\r\n                    .css('left', Math.abs(ax.x_max - ax.x_min) + 4)\r\n                    .appendTo(this.$el);\r\n            }\r\n        }\r\n        if (!ax.polar && (direction & 2)) {\r\n            $('<div />')\r\n                .addClass('vRuler')\r\n                .css('position', 'absolute')\r\n                .appendTo(this.$el);\r\n            if(!template) {\r\n                $('<div />')\r\n                    .addClass('vLabel')\r\n                    .css('position', 'absolute')\r\n                    .css('top', Math.abs(ax.y_max - ax.y_min) + 1)\r\n                    .appendTo(this.$el);\r\n            }\r\n        }\r\n        if (direction == 3) {\r\n            $('<div />')\r\n                .addClass('iRuler')\r\n                .css('position', 'absolute')\r\n                .appendTo(this.$el);\r\n        }\r\n        this.update();\r\n    },\r\n    \r\n    update: function() {\r\n        /**\r\n         * Move cursor to the position stored in the model.\r\n         */\r\n        var ax = this.model.get('ax'),\r\n            direction = this.model.get('direction');\r\n        this.position = _.clone(this.model.get('position'));\r\n        if ((this.position[0] != null) || (this.position[1] != null)) {\r\n            var xy = ax.transform(this.position[0], this.position[1]);\r\n            this.move(direction, xy[0], xy[1]);\r\n        }\r\n    },\r\n    \r\n    formatNumber: function(u, u_min, u_max, x_min, x_max) {\r\n        /**\r\n         * Format u such that its number of significant digits is at least\r\n         * equal to log10 of the number of pixels between x_min and x_max.\r\n         */\r\n        var precision = Math.ceil(Math.LOG10E * Math.log(Math.abs(x_max - x_min))),\r\n            u_msd = Math.LOG10E * Math.log(Math.abs(u)),\r\n            s_msd = Math.LOG10E * Math.log(Math.max(Math.abs(u_max), Math.abs(u_min))),\r\n            d_msd = Math.LOG10E * Math.log(Math.abs(u_max - u_min)),\r\n            digits = Math.max(1, Math.ceil(precision + u_msd - d_msd));\r\n        if ((Math.abs(s_msd) > 3) || (Math.abs(u_msd) > 3)) {\r\n            return u.toExponential(digits - 1);\r\n        } else {\r\n            return u.toPrecision(digits);\r\n        }\r\n        \r\n    },\r\n\r\n    move: function(direction, x, y) {\r\n        /**\r\n         * Move a cursor and update its labels.\r\n         *\r\n         * Input:\r\n         *   direction (int) - 1: vertical, 2: horizontal, 3: both\r\n         *   x, y (float) - new position in screen coordinates\r\n         */\r\n        var ax = this.model.get('ax'),\r\n            uv = ax.transformInverse(x, y),\r\n            x_invalid = (uv[0] < ax.u_min) || (uv[0] > ax.u_max),\r\n            y_invalid = (uv[1] < ax.v_min) || (uv[1] > ax.v_max);\r\n        x = Math.max(0, Math.min(ax.x_max-ax.x_min, x));\r\n        if (ax.polar) {\r\n            y = (ax.y_min - ax.y_max)/2.\r\n        } else {\r\n            y = Math.max(0, Math.min(ax.y_min-ax.y_max, y));\r\n        }\r\n        \r\n        if (ax.polar) {\r\n            this.$el.css('transform', 'rotate(' + (-uv[0]).toString() + 'rad)');\r\n        }\r\n        if (direction & 1) {\r\n            this.position[1] = uv[1];\r\n            this.$el.children('.hRuler').css('top', y - 1);\r\n            this.$el.children('.iRuler').css('top', y - 1);\r\n            var hlabel = this.$el.children('.hLabel');\r\n            if (y_invalid) {\r\n                hlabel.text('');\r\n            } else {\r\n                hlabel.text(this.formatNumber(uv[1], ax.v_min, ax.v_max, ax.y_min, ax.y_max));\r\n                hlabel.css('top', y - hlabel.height()/2);\r\n            }\r\n        }\r\n        if (!ax.polar && (direction & 2)) {\r\n            this.position[0] = uv[0];\r\n            this.$el.children('.vRuler').css('left', x - 1);\r\n            this.$el.children('.iRuler').css('left', x - 1);\r\n            var vlabel = this.$el.children('.vLabel');\r\n            if (x_invalid) {\r\n                vlabel.text('');\r\n            } else {\r\n                vlabel.text(this.formatNumber(uv[0], ax.u_min, ax.u_max, ax.x_min, ax.x_max));\r\n                vlabel.css('left', x - vlabel.width()/2);\r\n            }\r\n        }            \r\n    },\r\n\r\n    grab: function(event, arg2, arg3) {\r\n        /**\r\n         * Start dragging a cursor or ruler.\r\n         *  \r\n         * Installs mousemove/mouseup event handlers to follow\r\n         * mouse cursor movements.\r\n         * Dragging is limited to the x or y axis if the lines\r\n         * of the cursor instead of the intersection are dragged.\r\n         * If the template cursor is dragged, a new cursor/ruler\r\n         * is created before dragging.\r\n         */\r\n        var self = this;\r\n        // prevent text selection\r\n        event.preventDefault();\r\n        window.getSelection().removeAllRanges();\r\n        // prevent zoom start\r\n        event.stopPropagation()            \r\n        // determine which cursor element is being dragged\r\n        var direction = 3;\r\n        if ($(event.target).hasClass('hRuler')) {\r\n            direction = 1;\r\n        } else if ($(event.target).hasClass('vRuler')) {\r\n            direction = 2;\r\n        }\r\n        if (self.model.get('template')) {\r\n            self.trigger('duplicate', direction, event);\r\n        } else {\r\n            // install event handlers\r\n            var data = {cursor: self, direction: direction};\r\n            $(document).on('mousemove', data, self.drag);\r\n            $(document).one('mouseup', data, self.drop);\r\n        }\r\n    },\r\n    \r\n    drag: function(event) {\r\n        /**\r\n         * Respond to mousemove events.\r\n         *\r\n         * Updates cursor position and coordinate labels.\r\n         */\r\n        var self = event.data.cursor,\r\n            direction = event.data.direction,\r\n            ax = self.model.get('ax');\r\n        var pos = ax.mouseXY(event, false);\r\n        self.move(direction, pos[0], pos[1]);\r\n    },\r\n    \r\n    drop: function(event) {\r\n        /**\r\n         * Respond to mouseup events.\r\n         *\r\n         * Remove event handlers. \r\n         * Delete the cursor if it is out of range.\r\n         */\r\n        var self = event.data.cursor;\r\n        // remove event handlers\r\n        $(document).off('mousemove', self.drag);\r\n        // save new cursor position\r\n        self.model.set('position', self.position);\r\n        // destroy model if the new position is invalid\r\n        if(!self.model.isValid()) {\r\n            self.model.destroy();\r\n        }\r\n    }\r\n\r\n});\r\n\r\nvar CursorCollectionView = Backbone.View.extend({\r\n    \r\n    initialize: function(options) {\r\n        this.views = [];\r\n        this.listenTo(this.model, 'add', this.add);\r\n        this.listenTo(this.model, 'remove', this.remove);\r\n        this.listenTo(this.model, 'reset', this.reset);\r\n    },\r\n    \r\n    render: function() {\r\n        //console.log('render');\r\n        this.$el.addClass('Cursors');\r\n        // create template cursor\r\n        if (this.model.ax.navigable) {\r\n            var tCursor = new Cursor({ax: this.model.ax, template: true}),\r\n                tView = new CursorView({model: tCursor});\r\n            tView.render();\r\n            this.listenTo(tView, 'duplicate', this.templateGrab);\r\n            this.$el.append(tView.el);\r\n        }\r\n        // create user cursors\r\n        this.update();\r\n    },\r\n    \r\n    update: function() {\r\n        //console.log('update');\r\n        // re-create user cursors\r\n        //this.reset();\r\n        this.model.each(this.add, this);\r\n    },\r\n    \r\n    templateGrab: function(direction, event) {\r\n        this.model.add(new Cursor({ax: this.model.ax, direction: direction}));\r\n        // ...add callback runs ...\r\n        // grab new view\r\n        this.views[this.views.length-1].grab(event);\r\n    },\r\n    \r\n    reset: function() {\r\n        //console.log('reset');\r\n        // delete all cursors\r\n        this.views.forEach(function(view) {\r\n            view.remove();\r\n        });\r\n    },\r\n    \r\n    add: function(cursor) {\r\n        /**\r\n         * Create a cursor view\r\n         */\r\n        //console.log('add');\r\n        var view = new CursorView({ax: this.ax, model: cursor});\r\n        this.views.push(view);\r\n        this.$el.append(view.el);\r\n        view.render();\r\n    },\r\n    \r\n    remove: function(cursor, model, options) {\r\n        /**\r\n         * Remove a cursor view\r\n         */\r\n        //console.log('remove');\r\n        var idx = options.index;\r\n        if (this.views.length > idx) {\r\n            this.views[idx].remove();\r\n            this.views.splice(idx, 1);\r\n        }\r\n    }\r\n});\r\n\r\nvar ZoomCursorFigureView = ZoomFigureView.extend({\r\n    render: function() {\r\n        // render ZoomFigureView\r\n        ZoomCursorFigureView.__super__.render.apply(this);\r\n        this.cursorsUpdate();\r\n    },\r\n    \r\n    cursorsUpdate: function() {\r\n        // delete existing cursors\r\n        if (this.axes_cursors == undefined) {\r\n            this.axes_cursors = [];\r\n        }\r\n        this.axes_cursors.forEach(function(cursors) {\r\n            cursors.destroy();\r\n        });\r\n        // create new cursors\r\n        var nb_axes_cursors = this.model.get('cursors');\r\n        for (var idx=0; idx<this.axes.length; idx++) {\r\n            // create new set of cursors\r\n            var ax = this.axes[idx],\r\n                nb_cursors = nb_axes_cursors[idx];\r\n            if(!ax.navigable) continue;\r\n            var cursors = new CursorCollection([], {ax: ax});\r\n            if (nb_cursors != undefined) {\r\n                nb_cursors.forEach(function(nb_cursor) {\r\n                    var direction = (((nb_cursor[0] != null) ? 2 : 0) + \r\n                                     ((nb_cursor[1] != null) ? 1 : 0));\r\n                    var cursor = new Cursor({ax: ax, direction: direction, \r\n                                             position: nb_cursor});\r\n                    //if (cursor.isValid()) {\r\n                        cursors.add(cursor);\r\n                    //} else {\r\n                    //    cursor.destroy();\r\n                    //}\r\n                });\r\n            }\r\n            // create a view for the cursors\r\n            var view = new CursorCollectionView({model: cursors});\r\n            this.axes[idx].$el.append(view.el);\r\n            view.render();\r\n            // fire change if number of cursors changed (due to validation)\r\n            //if ((nb_cursors != undefined) && (nb_cursors.length != cursors.length)) {\r\n            //    this.cursorChange({collection: cursors});\r\n            //}\r\n            // listen to cursor events\r\n            //this.listenTo(cursors, 'add', this.change);\r\n            this.listenTo(cursors, 'remove', this.cursorChange);\r\n            this.listenTo(cursors, 'change', this.cursorChange);\r\n        }\r\n    },\r\n    \r\n    update: function() {\r\n        //console.log('PlotCursorView update');\r\n        ZoomCursorFigureView.__super__.update.apply(this);\r\n        this.cursorsUpdate();\r\n    },\r\n    \r\n    cursorChange: function(changed, options) {\r\n        //console.log('PlotCursorView change');\r\n        if (changed.collection == undefined) return;\r\n        // calculate new cursors for axis\r\n        var cursors = [];\r\n        changed.collection.forEach(function(cursor) {\r\n            cursors.push(cursor.get('position')); \r\n        });\r\n        // update model\r\n        var cursorss = _.clone(this.model.get('cursors'));\r\n        for(var idx=0; idx<this.axes.length; idx++) {\r\n            if (cursorss[idx] == undefined)\r\n                cursorss[idx] = [];\r\n        }\r\n        cursorss[changed.collection.ax.index] = cursors;\r\n        this.model.set('cursors', cursorss);\r\n        this.touch();\r\n    }\r\n});\r\n\r\n\r\nmodule.exports = {\r\n    FigureView: FigureView,\r\n    ZoomFigureView: ZoomFigureView,\r\n    ZoomCursorFigureView: ZoomCursorFigureView\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Figure.js\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jupyter-js-widgets\"\n// module id = 2\n// module chunks = 0","//     Underscore.js 1.9.1\r\n//     http://underscorejs.org\r\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n//     Underscore may be freely distributed under the MIT license.\r\n\r\n(function() {\r\n\r\n  // Baseline setup\r\n  // --------------\r\n\r\n  // Establish the root object, `window` (`self`) in the browser, `global`\r\n  // on the server, or `this` in some virtual machines. We use `self`\r\n  // instead of `window` for `WebWorker` support.\r\n  var root = typeof self == 'object' && self.self === self && self ||\r\n            typeof global == 'object' && global.global === global && global ||\r\n            this ||\r\n            {};\r\n\r\n  // Save the previous value of the `_` variable.\r\n  var previousUnderscore = root._;\r\n\r\n  // Save bytes in the minified (but not gzipped) version:\r\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\r\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n  // Create quick reference variables for speed access to core prototypes.\r\n  var push = ArrayProto.push,\r\n      slice = ArrayProto.slice,\r\n      toString = ObjProto.toString,\r\n      hasOwnProperty = ObjProto.hasOwnProperty;\r\n\r\n  // All **ECMAScript 5** native function implementations that we hope to use\r\n  // are declared here.\r\n  var nativeIsArray = Array.isArray,\r\n      nativeKeys = Object.keys,\r\n      nativeCreate = Object.create;\r\n\r\n  // Naked function reference for surrogate-prototype-swapping.\r\n  var Ctor = function(){};\r\n\r\n  // Create a safe reference to the Underscore object for use below.\r\n  var _ = function(obj) {\r\n    if (obj instanceof _) return obj;\r\n    if (!(this instanceof _)) return new _(obj);\r\n    this._wrapped = obj;\r\n  };\r\n\r\n  // Export the Underscore object for **Node.js**, with\r\n  // backwards-compatibility for their old module API. If we're in\r\n  // the browser, add `_` as a global object.\r\n  // (`nodeType` is checked to ensure that `module`\r\n  // and `exports` are not HTML elements.)\r\n  if (typeof exports != 'undefined' && !exports.nodeType) {\r\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\r\n      exports = module.exports = _;\r\n    }\r\n    exports._ = _;\r\n  } else {\r\n    root._ = _;\r\n  }\r\n\r\n  // Current version.\r\n  _.VERSION = '1.9.1';\r\n\r\n  // Internal function that returns an efficient (for current engines) version\r\n  // of the passed-in callback, to be repeatedly applied in other Underscore\r\n  // functions.\r\n  var optimizeCb = function(func, context, argCount) {\r\n    if (context === void 0) return func;\r\n    switch (argCount == null ? 3 : argCount) {\r\n      case 1: return function(value) {\r\n        return func.call(context, value);\r\n      };\r\n      // The 2-argument case is omitted because we’re not using it.\r\n      case 3: return function(value, index, collection) {\r\n        return func.call(context, value, index, collection);\r\n      };\r\n      case 4: return function(accumulator, value, index, collection) {\r\n        return func.call(context, accumulator, value, index, collection);\r\n      };\r\n    }\r\n    return function() {\r\n      return func.apply(context, arguments);\r\n    };\r\n  };\r\n\r\n  var builtinIteratee;\r\n\r\n  // An internal function to generate callbacks that can be applied to each\r\n  // element in a collection, returning the desired result — either `identity`,\r\n  // an arbitrary callback, a property matcher, or a property accessor.\r\n  var cb = function(value, context, argCount) {\r\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\r\n    if (value == null) return _.identity;\r\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\r\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\r\n    return _.property(value);\r\n  };\r\n\r\n  // External wrapper for our callback generator. Users may customize\r\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\r\n  // This abstraction hides the internal-only argCount argument.\r\n  _.iteratee = builtinIteratee = function(value, context) {\r\n    return cb(value, context, Infinity);\r\n  };\r\n\r\n  // Some functions take a variable number of arguments, or a few expected\r\n  // arguments at the beginning and then a variable number of values to operate\r\n  // on. This helper accumulates all remaining arguments past the function’s\r\n  // argument length (or an explicit `startIndex`), into an array that becomes\r\n  // the last argument. Similar to ES6’s \"rest parameter\".\r\n  var restArguments = function(func, startIndex) {\r\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\r\n    return function() {\r\n      var length = Math.max(arguments.length - startIndex, 0),\r\n          rest = Array(length),\r\n          index = 0;\r\n      for (; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    };\r\n  };\r\n\r\n  // An internal function for creating a new object that inherits from another.\r\n  var baseCreate = function(prototype) {\r\n    if (!_.isObject(prototype)) return {};\r\n    if (nativeCreate) return nativeCreate(prototype);\r\n    Ctor.prototype = prototype;\r\n    var result = new Ctor;\r\n    Ctor.prototype = null;\r\n    return result;\r\n  };\r\n\r\n  var shallowProperty = function(key) {\r\n    return function(obj) {\r\n      return obj == null ? void 0 : obj[key];\r\n    };\r\n  };\r\n\r\n  var has = function(obj, path) {\r\n    return obj != null && hasOwnProperty.call(obj, path);\r\n  }\r\n\r\n  var deepGet = function(obj, path) {\r\n    var length = path.length;\r\n    for (var i = 0; i < length; i++) {\r\n      if (obj == null) return void 0;\r\n      obj = obj[path[i]];\r\n    }\r\n    return length ? obj : void 0;\r\n  };\r\n\r\n  // Helper for collection methods to determine whether a collection\r\n  // should be iterated as an array or as an object.\r\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\r\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\r\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\r\n  var getLength = shallowProperty('length');\r\n  var isArrayLike = function(collection) {\r\n    var length = getLength(collection);\r\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\r\n  };\r\n\r\n  // Collection Functions\r\n  // --------------------\r\n\r\n  // The cornerstone, an `each` implementation, aka `forEach`.\r\n  // Handles raw objects in addition to array-likes. Treats all\r\n  // sparse array-likes as if they were dense.\r\n  _.each = _.forEach = function(obj, iteratee, context) {\r\n    iteratee = optimizeCb(iteratee, context);\r\n    var i, length;\r\n    if (isArrayLike(obj)) {\r\n      for (i = 0, length = obj.length; i < length; i++) {\r\n        iteratee(obj[i], i, obj);\r\n      }\r\n    } else {\r\n      var keys = _.keys(obj);\r\n      for (i = 0, length = keys.length; i < length; i++) {\r\n        iteratee(obj[keys[i]], keys[i], obj);\r\n      }\r\n    }\r\n    return obj;\r\n  };\r\n\r\n  // Return the results of applying the iteratee to each element.\r\n  _.map = _.collect = function(obj, iteratee, context) {\r\n    iteratee = cb(iteratee, context);\r\n    var keys = !isArrayLike(obj) && _.keys(obj),\r\n        length = (keys || obj).length,\r\n        results = Array(length);\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys ? keys[index] : index;\r\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\r\n    }\r\n    return results;\r\n  };\r\n\r\n  // Create a reducing function iterating left or right.\r\n  var createReduce = function(dir) {\r\n    // Wrap code that reassigns argument variables in a separate function than\r\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\r\n    var reducer = function(obj, iteratee, memo, initial) {\r\n      var keys = !isArrayLike(obj) && _.keys(obj),\r\n          length = (keys || obj).length,\r\n          index = dir > 0 ? 0 : length - 1;\r\n      if (!initial) {\r\n        memo = obj[keys ? keys[index] : index];\r\n        index += dir;\r\n      }\r\n      for (; index >= 0 && index < length; index += dir) {\r\n        var currentKey = keys ? keys[index] : index;\r\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\r\n      }\r\n      return memo;\r\n    };\r\n\r\n    return function(obj, iteratee, memo, context) {\r\n      var initial = arguments.length >= 3;\r\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\r\n    };\r\n  };\r\n\r\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\r\n  // or `foldl`.\r\n  _.reduce = _.foldl = _.inject = createReduce(1);\r\n\r\n  // The right-associative version of reduce, also known as `foldr`.\r\n  _.reduceRight = _.foldr = createReduce(-1);\r\n\r\n  // Return the first value which passes a truth test. Aliased as `detect`.\r\n  _.find = _.detect = function(obj, predicate, context) {\r\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\r\n    var key = keyFinder(obj, predicate, context);\r\n    if (key !== void 0 && key !== -1) return obj[key];\r\n  };\r\n\r\n  // Return all the elements that pass a truth test.\r\n  // Aliased as `select`.\r\n  _.filter = _.select = function(obj, predicate, context) {\r\n    var results = [];\r\n    predicate = cb(predicate, context);\r\n    _.each(obj, function(value, index, list) {\r\n      if (predicate(value, index, list)) results.push(value);\r\n    });\r\n    return results;\r\n  };\r\n\r\n  // Return all the elements for which a truth test fails.\r\n  _.reject = function(obj, predicate, context) {\r\n    return _.filter(obj, _.negate(cb(predicate)), context);\r\n  };\r\n\r\n  // Determine whether all of the elements match a truth test.\r\n  // Aliased as `all`.\r\n  _.every = _.all = function(obj, predicate, context) {\r\n    predicate = cb(predicate, context);\r\n    var keys = !isArrayLike(obj) && _.keys(obj),\r\n        length = (keys || obj).length;\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys ? keys[index] : index;\r\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Determine if at least one element in the object matches a truth test.\r\n  // Aliased as `any`.\r\n  _.some = _.any = function(obj, predicate, context) {\r\n    predicate = cb(predicate, context);\r\n    var keys = !isArrayLike(obj) && _.keys(obj),\r\n        length = (keys || obj).length;\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys ? keys[index] : index;\r\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Determine if the array or object contains a given item (using `===`).\r\n  // Aliased as `includes` and `include`.\r\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\r\n    if (!isArrayLike(obj)) obj = _.values(obj);\r\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\r\n    return _.indexOf(obj, item, fromIndex) >= 0;\r\n  };\r\n\r\n  // Invoke a method (with arguments) on every item in a collection.\r\n  _.invoke = restArguments(function(obj, path, args) {\r\n    var contextPath, func;\r\n    if (_.isFunction(path)) {\r\n      func = path;\r\n    } else if (_.isArray(path)) {\r\n      contextPath = path.slice(0, -1);\r\n      path = path[path.length - 1];\r\n    }\r\n    return _.map(obj, function(context) {\r\n      var method = func;\r\n      if (!method) {\r\n        if (contextPath && contextPath.length) {\r\n          context = deepGet(context, contextPath);\r\n        }\r\n        if (context == null) return void 0;\r\n        method = context[path];\r\n      }\r\n      return method == null ? method : method.apply(context, args);\r\n    });\r\n  });\r\n\r\n  // Convenience version of a common use case of `map`: fetching a property.\r\n  _.pluck = function(obj, key) {\r\n    return _.map(obj, _.property(key));\r\n  };\r\n\r\n  // Convenience version of a common use case of `filter`: selecting only objects\r\n  // containing specific `key:value` pairs.\r\n  _.where = function(obj, attrs) {\r\n    return _.filter(obj, _.matcher(attrs));\r\n  };\r\n\r\n  // Convenience version of a common use case of `find`: getting the first object\r\n  // containing specific `key:value` pairs.\r\n  _.findWhere = function(obj, attrs) {\r\n    return _.find(obj, _.matcher(attrs));\r\n  };\r\n\r\n  // Return the maximum element (or element-based computation).\r\n  _.max = function(obj, iteratee, context) {\r\n    var result = -Infinity, lastComputed = -Infinity,\r\n        value, computed;\r\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\r\n      obj = isArrayLike(obj) ? obj : _.values(obj);\r\n      for (var i = 0, length = obj.length; i < length; i++) {\r\n        value = obj[i];\r\n        if (value != null && value > result) {\r\n          result = value;\r\n        }\r\n      }\r\n    } else {\r\n      iteratee = cb(iteratee, context);\r\n      _.each(obj, function(v, index, list) {\r\n        computed = iteratee(v, index, list);\r\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\r\n          result = v;\r\n          lastComputed = computed;\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Return the minimum element (or element-based computation).\r\n  _.min = function(obj, iteratee, context) {\r\n    var result = Infinity, lastComputed = Infinity,\r\n        value, computed;\r\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\r\n      obj = isArrayLike(obj) ? obj : _.values(obj);\r\n      for (var i = 0, length = obj.length; i < length; i++) {\r\n        value = obj[i];\r\n        if (value != null && value < result) {\r\n          result = value;\r\n        }\r\n      }\r\n    } else {\r\n      iteratee = cb(iteratee, context);\r\n      _.each(obj, function(v, index, list) {\r\n        computed = iteratee(v, index, list);\r\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\r\n          result = v;\r\n          lastComputed = computed;\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Shuffle a collection.\r\n  _.shuffle = function(obj) {\r\n    return _.sample(obj, Infinity);\r\n  };\r\n\r\n  // Sample **n** random values from a collection using the modern version of the\r\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\r\n  // If **n** is not specified, returns a single random element.\r\n  // The internal `guard` argument allows it to work with `map`.\r\n  _.sample = function(obj, n, guard) {\r\n    if (n == null || guard) {\r\n      if (!isArrayLike(obj)) obj = _.values(obj);\r\n      return obj[_.random(obj.length - 1)];\r\n    }\r\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\r\n    var length = getLength(sample);\r\n    n = Math.max(Math.min(n, length), 0);\r\n    var last = length - 1;\r\n    for (var index = 0; index < n; index++) {\r\n      var rand = _.random(index, last);\r\n      var temp = sample[index];\r\n      sample[index] = sample[rand];\r\n      sample[rand] = temp;\r\n    }\r\n    return sample.slice(0, n);\r\n  };\r\n\r\n  // Sort the object's values by a criterion produced by an iteratee.\r\n  _.sortBy = function(obj, iteratee, context) {\r\n    var index = 0;\r\n    iteratee = cb(iteratee, context);\r\n    return _.pluck(_.map(obj, function(value, key, list) {\r\n      return {\r\n        value: value,\r\n        index: index++,\r\n        criteria: iteratee(value, key, list)\r\n      };\r\n    }).sort(function(left, right) {\r\n      var a = left.criteria;\r\n      var b = right.criteria;\r\n      if (a !== b) {\r\n        if (a > b || a === void 0) return 1;\r\n        if (a < b || b === void 0) return -1;\r\n      }\r\n      return left.index - right.index;\r\n    }), 'value');\r\n  };\r\n\r\n  // An internal function used for aggregate \"group by\" operations.\r\n  var group = function(behavior, partition) {\r\n    return function(obj, iteratee, context) {\r\n      var result = partition ? [[], []] : {};\r\n      iteratee = cb(iteratee, context);\r\n      _.each(obj, function(value, index) {\r\n        var key = iteratee(value, index, obj);\r\n        behavior(result, value, key);\r\n      });\r\n      return result;\r\n    };\r\n  };\r\n\r\n  // Groups the object's values by a criterion. Pass either a string attribute\r\n  // to group by, or a function that returns the criterion.\r\n  _.groupBy = group(function(result, value, key) {\r\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\r\n  });\r\n\r\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\r\n  // when you know that your index values will be unique.\r\n  _.indexBy = group(function(result, value, key) {\r\n    result[key] = value;\r\n  });\r\n\r\n  // Counts instances of an object that group by a certain criterion. Pass\r\n  // either a string attribute to count by, or a function that returns the\r\n  // criterion.\r\n  _.countBy = group(function(result, value, key) {\r\n    if (has(result, key)) result[key]++; else result[key] = 1;\r\n  });\r\n\r\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\r\n  // Safely create a real, live array from anything iterable.\r\n  _.toArray = function(obj) {\r\n    if (!obj) return [];\r\n    if (_.isArray(obj)) return slice.call(obj);\r\n    if (_.isString(obj)) {\r\n      // Keep surrogate pair characters together\r\n      return obj.match(reStrSymbol);\r\n    }\r\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\r\n    return _.values(obj);\r\n  };\r\n\r\n  // Return the number of elements in an object.\r\n  _.size = function(obj) {\r\n    if (obj == null) return 0;\r\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\r\n  };\r\n\r\n  // Split a collection into two arrays: one whose elements all satisfy the given\r\n  // predicate, and one whose elements all do not satisfy the predicate.\r\n  _.partition = group(function(result, value, pass) {\r\n    result[pass ? 0 : 1].push(value);\r\n  }, true);\r\n\r\n  // Array Functions\r\n  // ---------------\r\n\r\n  // Get the first element of an array. Passing **n** will return the first N\r\n  // values in the array. Aliased as `head` and `take`. The **guard** check\r\n  // allows it to work with `_.map`.\r\n  _.first = _.head = _.take = function(array, n, guard) {\r\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\r\n    if (n == null || guard) return array[0];\r\n    return _.initial(array, array.length - n);\r\n  };\r\n\r\n  // Returns everything but the last entry of the array. Especially useful on\r\n  // the arguments object. Passing **n** will return all the values in\r\n  // the array, excluding the last N.\r\n  _.initial = function(array, n, guard) {\r\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\r\n  };\r\n\r\n  // Get the last element of an array. Passing **n** will return the last N\r\n  // values in the array.\r\n  _.last = function(array, n, guard) {\r\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\r\n    if (n == null || guard) return array[array.length - 1];\r\n    return _.rest(array, Math.max(0, array.length - n));\r\n  };\r\n\r\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\r\n  // Especially useful on the arguments object. Passing an **n** will return\r\n  // the rest N values in the array.\r\n  _.rest = _.tail = _.drop = function(array, n, guard) {\r\n    return slice.call(array, n == null || guard ? 1 : n);\r\n  };\r\n\r\n  // Trim out all falsy values from an array.\r\n  _.compact = function(array) {\r\n    return _.filter(array, Boolean);\r\n  };\r\n\r\n  // Internal implementation of a recursive `flatten` function.\r\n  var flatten = function(input, shallow, strict, output) {\r\n    output = output || [];\r\n    var idx = output.length;\r\n    for (var i = 0, length = getLength(input); i < length; i++) {\r\n      var value = input[i];\r\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\r\n        // Flatten current level of array or arguments object.\r\n        if (shallow) {\r\n          var j = 0, len = value.length;\r\n          while (j < len) output[idx++] = value[j++];\r\n        } else {\r\n          flatten(value, shallow, strict, output);\r\n          idx = output.length;\r\n        }\r\n      } else if (!strict) {\r\n        output[idx++] = value;\r\n      }\r\n    }\r\n    return output;\r\n  };\r\n\r\n  // Flatten out an array, either recursively (by default), or just one level.\r\n  _.flatten = function(array, shallow) {\r\n    return flatten(array, shallow, false);\r\n  };\r\n\r\n  // Return a version of the array that does not contain the specified value(s).\r\n  _.without = restArguments(function(array, otherArrays) {\r\n    return _.difference(array, otherArrays);\r\n  });\r\n\r\n  // Produce a duplicate-free version of the array. If the array has already\r\n  // been sorted, you have the option of using a faster algorithm.\r\n  // The faster algorithm will not work with an iteratee if the iteratee\r\n  // is not a one-to-one function, so providing an iteratee will disable\r\n  // the faster algorithm.\r\n  // Aliased as `unique`.\r\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\r\n    if (!_.isBoolean(isSorted)) {\r\n      context = iteratee;\r\n      iteratee = isSorted;\r\n      isSorted = false;\r\n    }\r\n    if (iteratee != null) iteratee = cb(iteratee, context);\r\n    var result = [];\r\n    var seen = [];\r\n    for (var i = 0, length = getLength(array); i < length; i++) {\r\n      var value = array[i],\r\n          computed = iteratee ? iteratee(value, i, array) : value;\r\n      if (isSorted && !iteratee) {\r\n        if (!i || seen !== computed) result.push(value);\r\n        seen = computed;\r\n      } else if (iteratee) {\r\n        if (!_.contains(seen, computed)) {\r\n          seen.push(computed);\r\n          result.push(value);\r\n        }\r\n      } else if (!_.contains(result, value)) {\r\n        result.push(value);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Produce an array that contains the union: each distinct element from all of\r\n  // the passed-in arrays.\r\n  _.union = restArguments(function(arrays) {\r\n    return _.uniq(flatten(arrays, true, true));\r\n  });\r\n\r\n  // Produce an array that contains every item shared between all the\r\n  // passed-in arrays.\r\n  _.intersection = function(array) {\r\n    var result = [];\r\n    var argsLength = arguments.length;\r\n    for (var i = 0, length = getLength(array); i < length; i++) {\r\n      var item = array[i];\r\n      if (_.contains(result, item)) continue;\r\n      var j;\r\n      for (j = 1; j < argsLength; j++) {\r\n        if (!_.contains(arguments[j], item)) break;\r\n      }\r\n      if (j === argsLength) result.push(item);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Take the difference between one array and a number of other arrays.\r\n  // Only the elements present in just the first array will remain.\r\n  _.difference = restArguments(function(array, rest) {\r\n    rest = flatten(rest, true, true);\r\n    return _.filter(array, function(value){\r\n      return !_.contains(rest, value);\r\n    });\r\n  });\r\n\r\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\r\n  // each array's elements on shared indices.\r\n  _.unzip = function(array) {\r\n    var length = array && _.max(array, getLength).length || 0;\r\n    var result = Array(length);\r\n\r\n    for (var index = 0; index < length; index++) {\r\n      result[index] = _.pluck(array, index);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Zip together multiple lists into a single array -- elements that share\r\n  // an index go together.\r\n  _.zip = restArguments(_.unzip);\r\n\r\n  // Converts lists into objects. Pass either a single array of `[key, value]`\r\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\r\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\r\n  _.object = function(list, values) {\r\n    var result = {};\r\n    for (var i = 0, length = getLength(list); i < length; i++) {\r\n      if (values) {\r\n        result[list[i]] = values[i];\r\n      } else {\r\n        result[list[i][0]] = list[i][1];\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Generator function to create the findIndex and findLastIndex functions.\r\n  var createPredicateIndexFinder = function(dir) {\r\n    return function(array, predicate, context) {\r\n      predicate = cb(predicate, context);\r\n      var length = getLength(array);\r\n      var index = dir > 0 ? 0 : length - 1;\r\n      for (; index >= 0 && index < length; index += dir) {\r\n        if (predicate(array[index], index, array)) return index;\r\n      }\r\n      return -1;\r\n    };\r\n  };\r\n\r\n  // Returns the first index on an array-like that passes a predicate test.\r\n  _.findIndex = createPredicateIndexFinder(1);\r\n  _.findLastIndex = createPredicateIndexFinder(-1);\r\n\r\n  // Use a comparator function to figure out the smallest index at which\r\n  // an object should be inserted so as to maintain order. Uses binary search.\r\n  _.sortedIndex = function(array, obj, iteratee, context) {\r\n    iteratee = cb(iteratee, context, 1);\r\n    var value = iteratee(obj);\r\n    var low = 0, high = getLength(array);\r\n    while (low < high) {\r\n      var mid = Math.floor((low + high) / 2);\r\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\r\n    }\r\n    return low;\r\n  };\r\n\r\n  // Generator function to create the indexOf and lastIndexOf functions.\r\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\r\n    return function(array, item, idx) {\r\n      var i = 0, length = getLength(array);\r\n      if (typeof idx == 'number') {\r\n        if (dir > 0) {\r\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\r\n        } else {\r\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\r\n        }\r\n      } else if (sortedIndex && idx && length) {\r\n        idx = sortedIndex(array, item);\r\n        return array[idx] === item ? idx : -1;\r\n      }\r\n      if (item !== item) {\r\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\r\n        return idx >= 0 ? idx + i : -1;\r\n      }\r\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\r\n        if (array[idx] === item) return idx;\r\n      }\r\n      return -1;\r\n    };\r\n  };\r\n\r\n  // Return the position of the first occurrence of an item in an array,\r\n  // or -1 if the item is not included in the array.\r\n  // If the array is large and already in sort order, pass `true`\r\n  // for **isSorted** to use binary search.\r\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\r\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\r\n\r\n  // Generate an integer Array containing an arithmetic progression. A port of\r\n  // the native Python `range()` function. See\r\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\r\n  _.range = function(start, stop, step) {\r\n    if (stop == null) {\r\n      stop = start || 0;\r\n      start = 0;\r\n    }\r\n    if (!step) {\r\n      step = stop < start ? -1 : 1;\r\n    }\r\n\r\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\r\n    var range = Array(length);\r\n\r\n    for (var idx = 0; idx < length; idx++, start += step) {\r\n      range[idx] = start;\r\n    }\r\n\r\n    return range;\r\n  };\r\n\r\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\r\n  // items.\r\n  _.chunk = function(array, count) {\r\n    if (count == null || count < 1) return [];\r\n    var result = [];\r\n    var i = 0, length = array.length;\r\n    while (i < length) {\r\n      result.push(slice.call(array, i, i += count));\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Function (ahem) Functions\r\n  // ------------------\r\n\r\n  // Determines whether to execute a function as a constructor\r\n  // or a normal function with the provided arguments.\r\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\r\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\r\n    var self = baseCreate(sourceFunc.prototype);\r\n    var result = sourceFunc.apply(self, args);\r\n    if (_.isObject(result)) return result;\r\n    return self;\r\n  };\r\n\r\n  // Create a function bound to a given object (assigning `this`, and arguments,\r\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\r\n  // available.\r\n  _.bind = restArguments(function(func, context, args) {\r\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\r\n    var bound = restArguments(function(callArgs) {\r\n      return executeBound(func, bound, context, this, args.concat(callArgs));\r\n    });\r\n    return bound;\r\n  });\r\n\r\n  // Partially apply a function by creating a version that has had some of its\r\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\r\n  // as a placeholder by default, allowing any combination of arguments to be\r\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\r\n  _.partial = restArguments(function(func, boundArgs) {\r\n    var placeholder = _.partial.placeholder;\r\n    var bound = function() {\r\n      var position = 0, length = boundArgs.length;\r\n      var args = Array(length);\r\n      for (var i = 0; i < length; i++) {\r\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\r\n      }\r\n      while (position < arguments.length) args.push(arguments[position++]);\r\n      return executeBound(func, bound, this, this, args);\r\n    };\r\n    return bound;\r\n  });\r\n\r\n  _.partial.placeholder = _;\r\n\r\n  // Bind a number of an object's methods to that object. Remaining arguments\r\n  // are the method names to be bound. Useful for ensuring that all callbacks\r\n  // defined on an object belong to it.\r\n  _.bindAll = restArguments(function(obj, keys) {\r\n    keys = flatten(keys, false, false);\r\n    var index = keys.length;\r\n    if (index < 1) throw new Error('bindAll must be passed function names');\r\n    while (index--) {\r\n      var key = keys[index];\r\n      obj[key] = _.bind(obj[key], obj);\r\n    }\r\n  });\r\n\r\n  // Memoize an expensive function by storing its results.\r\n  _.memoize = function(func, hasher) {\r\n    var memoize = function(key) {\r\n      var cache = memoize.cache;\r\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\r\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\r\n      return cache[address];\r\n    };\r\n    memoize.cache = {};\r\n    return memoize;\r\n  };\r\n\r\n  // Delays a function for the given number of milliseconds, and then calls\r\n  // it with the arguments supplied.\r\n  _.delay = restArguments(function(func, wait, args) {\r\n    return setTimeout(function() {\r\n      return func.apply(null, args);\r\n    }, wait);\r\n  });\r\n\r\n  // Defers a function, scheduling it to run after the current call stack has\r\n  // cleared.\r\n  _.defer = _.partial(_.delay, _, 1);\r\n\r\n  // Returns a function, that, when invoked, will only be triggered at most once\r\n  // during a given window of time. Normally, the throttled function will run\r\n  // as much as it can, without ever going more than once per `wait` duration;\r\n  // but if you'd like to disable the execution on the leading edge, pass\r\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\r\n  _.throttle = function(func, wait, options) {\r\n    var timeout, context, args, result;\r\n    var previous = 0;\r\n    if (!options) options = {};\r\n\r\n    var later = function() {\r\n      previous = options.leading === false ? 0 : _.now();\r\n      timeout = null;\r\n      result = func.apply(context, args);\r\n      if (!timeout) context = args = null;\r\n    };\r\n\r\n    var throttled = function() {\r\n      var now = _.now();\r\n      if (!previous && options.leading === false) previous = now;\r\n      var remaining = wait - (now - previous);\r\n      context = this;\r\n      args = arguments;\r\n      if (remaining <= 0 || remaining > wait) {\r\n        if (timeout) {\r\n          clearTimeout(timeout);\r\n          timeout = null;\r\n        }\r\n        previous = now;\r\n        result = func.apply(context, args);\r\n        if (!timeout) context = args = null;\r\n      } else if (!timeout && options.trailing !== false) {\r\n        timeout = setTimeout(later, remaining);\r\n      }\r\n      return result;\r\n    };\r\n\r\n    throttled.cancel = function() {\r\n      clearTimeout(timeout);\r\n      previous = 0;\r\n      timeout = context = args = null;\r\n    };\r\n\r\n    return throttled;\r\n  };\r\n\r\n  // Returns a function, that, as long as it continues to be invoked, will not\r\n  // be triggered. The function will be called after it stops being called for\r\n  // N milliseconds. If `immediate` is passed, trigger the function on the\r\n  // leading edge, instead of the trailing.\r\n  _.debounce = function(func, wait, immediate) {\r\n    var timeout, result;\r\n\r\n    var later = function(context, args) {\r\n      timeout = null;\r\n      if (args) result = func.apply(context, args);\r\n    };\r\n\r\n    var debounced = restArguments(function(args) {\r\n      if (timeout) clearTimeout(timeout);\r\n      if (immediate) {\r\n        var callNow = !timeout;\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) result = func.apply(this, args);\r\n      } else {\r\n        timeout = _.delay(later, wait, this, args);\r\n      }\r\n\r\n      return result;\r\n    });\r\n\r\n    debounced.cancel = function() {\r\n      clearTimeout(timeout);\r\n      timeout = null;\r\n    };\r\n\r\n    return debounced;\r\n  };\r\n\r\n  // Returns the first function passed as an argument to the second,\r\n  // allowing you to adjust arguments, run code before and after, and\r\n  // conditionally execute the original function.\r\n  _.wrap = function(func, wrapper) {\r\n    return _.partial(wrapper, func);\r\n  };\r\n\r\n  // Returns a negated version of the passed-in predicate.\r\n  _.negate = function(predicate) {\r\n    return function() {\r\n      return !predicate.apply(this, arguments);\r\n    };\r\n  };\r\n\r\n  // Returns a function that is the composition of a list of functions, each\r\n  // consuming the return value of the function that follows.\r\n  _.compose = function() {\r\n    var args = arguments;\r\n    var start = args.length - 1;\r\n    return function() {\r\n      var i = start;\r\n      var result = args[start].apply(this, arguments);\r\n      while (i--) result = args[i].call(this, result);\r\n      return result;\r\n    };\r\n  };\r\n\r\n  // Returns a function that will only be executed on and after the Nth call.\r\n  _.after = function(times, func) {\r\n    return function() {\r\n      if (--times < 1) {\r\n        return func.apply(this, arguments);\r\n      }\r\n    };\r\n  };\r\n\r\n  // Returns a function that will only be executed up to (but not including) the Nth call.\r\n  _.before = function(times, func) {\r\n    var memo;\r\n    return function() {\r\n      if (--times > 0) {\r\n        memo = func.apply(this, arguments);\r\n      }\r\n      if (times <= 1) func = null;\r\n      return memo;\r\n    };\r\n  };\r\n\r\n  // Returns a function that will be executed at most one time, no matter how\r\n  // often you call it. Useful for lazy initialization.\r\n  _.once = _.partial(_.before, 2);\r\n\r\n  _.restArguments = restArguments;\r\n\r\n  // Object Functions\r\n  // ----------------\r\n\r\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\r\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\r\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\r\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\r\n\r\n  var collectNonEnumProps = function(obj, keys) {\r\n    var nonEnumIdx = nonEnumerableProps.length;\r\n    var constructor = obj.constructor;\r\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\r\n\r\n    // Constructor is a special case.\r\n    var prop = 'constructor';\r\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\r\n\r\n    while (nonEnumIdx--) {\r\n      prop = nonEnumerableProps[nonEnumIdx];\r\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\r\n        keys.push(prop);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Retrieve the names of an object's own properties.\r\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n  _.keys = function(obj) {\r\n    if (!_.isObject(obj)) return [];\r\n    if (nativeKeys) return nativeKeys(obj);\r\n    var keys = [];\r\n    for (var key in obj) if (has(obj, key)) keys.push(key);\r\n    // Ahem, IE < 9.\r\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\r\n    return keys;\r\n  };\r\n\r\n  // Retrieve all the property names of an object.\r\n  _.allKeys = function(obj) {\r\n    if (!_.isObject(obj)) return [];\r\n    var keys = [];\r\n    for (var key in obj) keys.push(key);\r\n    // Ahem, IE < 9.\r\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\r\n    return keys;\r\n  };\r\n\r\n  // Retrieve the values of an object's properties.\r\n  _.values = function(obj) {\r\n    var keys = _.keys(obj);\r\n    var length = keys.length;\r\n    var values = Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n      values[i] = obj[keys[i]];\r\n    }\r\n    return values;\r\n  };\r\n\r\n  // Returns the results of applying the iteratee to each element of the object.\r\n  // In contrast to _.map it returns an object.\r\n  _.mapObject = function(obj, iteratee, context) {\r\n    iteratee = cb(iteratee, context);\r\n    var keys = _.keys(obj),\r\n        length = keys.length,\r\n        results = {};\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys[index];\r\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\r\n    }\r\n    return results;\r\n  };\r\n\r\n  // Convert an object into a list of `[key, value]` pairs.\r\n  // The opposite of _.object.\r\n  _.pairs = function(obj) {\r\n    var keys = _.keys(obj);\r\n    var length = keys.length;\r\n    var pairs = Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n      pairs[i] = [keys[i], obj[keys[i]]];\r\n    }\r\n    return pairs;\r\n  };\r\n\r\n  // Invert the keys and values of an object. The values must be serializable.\r\n  _.invert = function(obj) {\r\n    var result = {};\r\n    var keys = _.keys(obj);\r\n    for (var i = 0, length = keys.length; i < length; i++) {\r\n      result[obj[keys[i]]] = keys[i];\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Return a sorted list of the function names available on the object.\r\n  // Aliased as `methods`.\r\n  _.functions = _.methods = function(obj) {\r\n    var names = [];\r\n    for (var key in obj) {\r\n      if (_.isFunction(obj[key])) names.push(key);\r\n    }\r\n    return names.sort();\r\n  };\r\n\r\n  // An internal function for creating assigner functions.\r\n  var createAssigner = function(keysFunc, defaults) {\r\n    return function(obj) {\r\n      var length = arguments.length;\r\n      if (defaults) obj = Object(obj);\r\n      if (length < 2 || obj == null) return obj;\r\n      for (var index = 1; index < length; index++) {\r\n        var source = arguments[index],\r\n            keys = keysFunc(source),\r\n            l = keys.length;\r\n        for (var i = 0; i < l; i++) {\r\n          var key = keys[i];\r\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n        }\r\n      }\r\n      return obj;\r\n    };\r\n  };\r\n\r\n  // Extend a given object with all the properties in passed-in object(s).\r\n  _.extend = createAssigner(_.allKeys);\r\n\r\n  // Assigns a given object with all the own properties in the passed-in object(s).\r\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\r\n  _.extendOwn = _.assign = createAssigner(_.keys);\r\n\r\n  // Returns the first key on an object that passes a predicate test.\r\n  _.findKey = function(obj, predicate, context) {\r\n    predicate = cb(predicate, context);\r\n    var keys = _.keys(obj), key;\r\n    for (var i = 0, length = keys.length; i < length; i++) {\r\n      key = keys[i];\r\n      if (predicate(obj[key], key, obj)) return key;\r\n    }\r\n  };\r\n\r\n  // Internal pick helper function to determine if `obj` has key `key`.\r\n  var keyInObj = function(value, key, obj) {\r\n    return key in obj;\r\n  };\r\n\r\n  // Return a copy of the object only containing the whitelisted properties.\r\n  _.pick = restArguments(function(obj, keys) {\r\n    var result = {}, iteratee = keys[0];\r\n    if (obj == null) return result;\r\n    if (_.isFunction(iteratee)) {\r\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\r\n      keys = _.allKeys(obj);\r\n    } else {\r\n      iteratee = keyInObj;\r\n      keys = flatten(keys, false, false);\r\n      obj = Object(obj);\r\n    }\r\n    for (var i = 0, length = keys.length; i < length; i++) {\r\n      var key = keys[i];\r\n      var value = obj[key];\r\n      if (iteratee(value, key, obj)) result[key] = value;\r\n    }\r\n    return result;\r\n  });\r\n\r\n  // Return a copy of the object without the blacklisted properties.\r\n  _.omit = restArguments(function(obj, keys) {\r\n    var iteratee = keys[0], context;\r\n    if (_.isFunction(iteratee)) {\r\n      iteratee = _.negate(iteratee);\r\n      if (keys.length > 1) context = keys[1];\r\n    } else {\r\n      keys = _.map(flatten(keys, false, false), String);\r\n      iteratee = function(value, key) {\r\n        return !_.contains(keys, key);\r\n      };\r\n    }\r\n    return _.pick(obj, iteratee, context);\r\n  });\r\n\r\n  // Fill in a given object with default properties.\r\n  _.defaults = createAssigner(_.allKeys, true);\r\n\r\n  // Creates an object that inherits from the given prototype object.\r\n  // If additional properties are provided then they will be added to the\r\n  // created object.\r\n  _.create = function(prototype, props) {\r\n    var result = baseCreate(prototype);\r\n    if (props) _.extendOwn(result, props);\r\n    return result;\r\n  };\r\n\r\n  // Create a (shallow-cloned) duplicate of an object.\r\n  _.clone = function(obj) {\r\n    if (!_.isObject(obj)) return obj;\r\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\r\n  };\r\n\r\n  // Invokes interceptor with the obj, and then returns obj.\r\n  // The primary purpose of this method is to \"tap into\" a method chain, in\r\n  // order to perform operations on intermediate results within the chain.\r\n  _.tap = function(obj, interceptor) {\r\n    interceptor(obj);\r\n    return obj;\r\n  };\r\n\r\n  // Returns whether an object has a given set of `key:value` pairs.\r\n  _.isMatch = function(object, attrs) {\r\n    var keys = _.keys(attrs), length = keys.length;\r\n    if (object == null) return !length;\r\n    var obj = Object(object);\r\n    for (var i = 0; i < length; i++) {\r\n      var key = keys[i];\r\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n\r\n  // Internal recursive comparison function for `isEqual`.\r\n  var eq, deepEq;\r\n  eq = function(a, b, aStack, bStack) {\r\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n    // `null` or `undefined` only equal to itself (strict comparison).\r\n    if (a == null || b == null) return false;\r\n    // `NaN`s are equivalent, but non-reflexive.\r\n    if (a !== a) return b !== b;\r\n    // Exhaust primitive checks\r\n    var type = typeof a;\r\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n    return deepEq(a, b, aStack, bStack);\r\n  };\r\n\r\n  // Internal recursive comparison function for `isEqual`.\r\n  deepEq = function(a, b, aStack, bStack) {\r\n    // Unwrap any wrapped objects.\r\n    if (a instanceof _) a = a._wrapped;\r\n    if (b instanceof _) b = b._wrapped;\r\n    // Compare `[[Class]]` names.\r\n    var className = toString.call(a);\r\n    if (className !== toString.call(b)) return false;\r\n    switch (className) {\r\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n      case '[object RegExp]':\r\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n      case '[object String]':\r\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n        // equivalent to `new String(\"5\")`.\r\n        return '' + a === '' + b;\r\n      case '[object Number]':\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        // Object(NaN) is equivalent to NaN.\r\n        if (+a !== +a) return +b !== +b;\r\n        // An `egal` comparison is performed for other numeric values.\r\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n      case '[object Date]':\r\n      case '[object Boolean]':\r\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n        // millisecond representations. Note that invalid dates with millisecond representations\r\n        // of `NaN` are not equivalent.\r\n        return +a === +b;\r\n      case '[object Symbol]':\r\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n    }\r\n\r\n    var areArrays = className === '[object Array]';\r\n    if (!areArrays) {\r\n      if (typeof a != 'object' || typeof b != 'object') return false;\r\n\r\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n      // from different frames are.\r\n      var aCtor = a.constructor, bCtor = b.constructor;\r\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n        return false;\r\n      }\r\n    }\r\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n    // Initializing stack of traversed objects.\r\n    // It's done here since we only need them for objects and arrays comparison.\r\n    aStack = aStack || [];\r\n    bStack = bStack || [];\r\n    var length = aStack.length;\r\n    while (length--) {\r\n      // Linear search. Performance is inversely proportional to the number of\r\n      // unique nested structures.\r\n      if (aStack[length] === a) return bStack[length] === b;\r\n    }\r\n\r\n    // Add the first object to the stack of traversed objects.\r\n    aStack.push(a);\r\n    bStack.push(b);\r\n\r\n    // Recursively compare objects and arrays.\r\n    if (areArrays) {\r\n      // Compare array lengths to determine if a deep comparison is necessary.\r\n      length = a.length;\r\n      if (length !== b.length) return false;\r\n      // Deep compare the contents, ignoring non-numeric properties.\r\n      while (length--) {\r\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n      }\r\n    } else {\r\n      // Deep compare objects.\r\n      var keys = _.keys(a), key;\r\n      length = keys.length;\r\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n      if (_.keys(b).length !== length) return false;\r\n      while (length--) {\r\n        // Deep compare each member\r\n        key = keys[length];\r\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\r\n      }\r\n    }\r\n    // Remove the first object from the stack of traversed objects.\r\n    aStack.pop();\r\n    bStack.pop();\r\n    return true;\r\n  };\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n  _.isEqual = function(a, b) {\r\n    return eq(a, b);\r\n  };\r\n\r\n  // Is a given array, string, or object empty?\r\n  // An \"empty\" object has no enumerable own-properties.\r\n  _.isEmpty = function(obj) {\r\n    if (obj == null) return true;\r\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\r\n    return _.keys(obj).length === 0;\r\n  };\r\n\r\n  // Is a given value a DOM element?\r\n  _.isElement = function(obj) {\r\n    return !!(obj && obj.nodeType === 1);\r\n  };\r\n\r\n  // Is a given value an array?\r\n  // Delegates to ECMA5's native Array.isArray\r\n  _.isArray = nativeIsArray || function(obj) {\r\n    return toString.call(obj) === '[object Array]';\r\n  };\r\n\r\n  // Is a given variable an object?\r\n  _.isObject = function(obj) {\r\n    var type = typeof obj;\r\n    return type === 'function' || type === 'object' && !!obj;\r\n  };\r\n\r\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\r\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\r\n    _['is' + name] = function(obj) {\r\n      return toString.call(obj) === '[object ' + name + ']';\r\n    };\r\n  });\r\n\r\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\r\n  // there isn't any inspectable \"Arguments\" type.\r\n  if (!_.isArguments(arguments)) {\r\n    _.isArguments = function(obj) {\r\n      return has(obj, 'callee');\r\n    };\r\n  }\r\n\r\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\r\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\r\n  var nodelist = root.document && root.document.childNodes;\r\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\r\n    _.isFunction = function(obj) {\r\n      return typeof obj == 'function' || false;\r\n    };\r\n  }\r\n\r\n  // Is a given object a finite number?\r\n  _.isFinite = function(obj) {\r\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\r\n  };\r\n\r\n  // Is the given value `NaN`?\r\n  _.isNaN = function(obj) {\r\n    return _.isNumber(obj) && isNaN(obj);\r\n  };\r\n\r\n  // Is a given value a boolean?\r\n  _.isBoolean = function(obj) {\r\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n  };\r\n\r\n  // Is a given value equal to null?\r\n  _.isNull = function(obj) {\r\n    return obj === null;\r\n  };\r\n\r\n  // Is a given variable undefined?\r\n  _.isUndefined = function(obj) {\r\n    return obj === void 0;\r\n  };\r\n\r\n  // Shortcut function for checking if an object has a given property directly\r\n  // on itself (in other words, not on a prototype).\r\n  _.has = function(obj, path) {\r\n    if (!_.isArray(path)) {\r\n      return has(obj, path);\r\n    }\r\n    var length = path.length;\r\n    for (var i = 0; i < length; i++) {\r\n      var key = path[i];\r\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n        return false;\r\n      }\r\n      obj = obj[key];\r\n    }\r\n    return !!length;\r\n  };\r\n\r\n  // Utility Functions\r\n  // -----------------\r\n\r\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\r\n  // previous owner. Returns a reference to the Underscore object.\r\n  _.noConflict = function() {\r\n    root._ = previousUnderscore;\r\n    return this;\r\n  };\r\n\r\n  // Keep the identity function around for default iteratees.\r\n  _.identity = function(value) {\r\n    return value;\r\n  };\r\n\r\n  // Predicate-generating functions. Often useful outside of Underscore.\r\n  _.constant = function(value) {\r\n    return function() {\r\n      return value;\r\n    };\r\n  };\r\n\r\n  _.noop = function(){};\r\n\r\n  // Creates a function that, when passed an object, will traverse that object’s\r\n  // properties down the given `path`, specified as an array of keys or indexes.\r\n  _.property = function(path) {\r\n    if (!_.isArray(path)) {\r\n      return shallowProperty(path);\r\n    }\r\n    return function(obj) {\r\n      return deepGet(obj, path);\r\n    };\r\n  };\r\n\r\n  // Generates a function for a given object that returns a given property.\r\n  _.propertyOf = function(obj) {\r\n    if (obj == null) {\r\n      return function(){};\r\n    }\r\n    return function(path) {\r\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\r\n    };\r\n  };\r\n\r\n  // Returns a predicate for checking whether an object has a given set of\r\n  // `key:value` pairs.\r\n  _.matcher = _.matches = function(attrs) {\r\n    attrs = _.extendOwn({}, attrs);\r\n    return function(obj) {\r\n      return _.isMatch(obj, attrs);\r\n    };\r\n  };\r\n\r\n  // Run a function **n** times.\r\n  _.times = function(n, iteratee, context) {\r\n    var accum = Array(Math.max(0, n));\r\n    iteratee = optimizeCb(iteratee, context, 1);\r\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\r\n    return accum;\r\n  };\r\n\r\n  // Return a random integer between min and max (inclusive).\r\n  _.random = function(min, max) {\r\n    if (max == null) {\r\n      max = min;\r\n      min = 0;\r\n    }\r\n    return min + Math.floor(Math.random() * (max - min + 1));\r\n  };\r\n\r\n  // A (possibly faster) way to get the current timestamp as an integer.\r\n  _.now = Date.now || function() {\r\n    return new Date().getTime();\r\n  };\r\n\r\n  // List of HTML entities for escaping.\r\n  var escapeMap = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    \"'\": '&#x27;',\r\n    '`': '&#x60;'\r\n  };\r\n  var unescapeMap = _.invert(escapeMap);\r\n\r\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\r\n  var createEscaper = function(map) {\r\n    var escaper = function(match) {\r\n      return map[match];\r\n    };\r\n    // Regexes for identifying a key that needs to be escaped.\r\n    var source = '(?:' + _.keys(map).join('|') + ')';\r\n    var testRegexp = RegExp(source);\r\n    var replaceRegexp = RegExp(source, 'g');\r\n    return function(string) {\r\n      string = string == null ? '' : '' + string;\r\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\r\n    };\r\n  };\r\n  _.escape = createEscaper(escapeMap);\r\n  _.unescape = createEscaper(unescapeMap);\r\n\r\n  // Traverses the children of `obj` along `path`. If a child is a function, it\r\n  // is invoked with its parent as context. Returns the value of the final\r\n  // child, or `fallback` if any child is undefined.\r\n  _.result = function(obj, path, fallback) {\r\n    if (!_.isArray(path)) path = [path];\r\n    var length = path.length;\r\n    if (!length) {\r\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\r\n    }\r\n    for (var i = 0; i < length; i++) {\r\n      var prop = obj == null ? void 0 : obj[path[i]];\r\n      if (prop === void 0) {\r\n        prop = fallback;\r\n        i = length; // Ensure we don't continue iterating.\r\n      }\r\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\r\n    }\r\n    return obj;\r\n  };\r\n\r\n  // Generate a unique integer id (unique within the entire client session).\r\n  // Useful for temporary DOM ids.\r\n  var idCounter = 0;\r\n  _.uniqueId = function(prefix) {\r\n    var id = ++idCounter + '';\r\n    return prefix ? prefix + id : id;\r\n  };\r\n\r\n  // By default, Underscore uses ERB-style template delimiters, change the\r\n  // following template settings to use alternative delimiters.\r\n  _.templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n  // When customizing `templateSettings`, if you don't want to define an\r\n  // interpolation, evaluation or escaping regex, we need one that is\r\n  // guaranteed not to match.\r\n  var noMatch = /(.)^/;\r\n\r\n  // Certain characters need to be escaped so that they can be put into a\r\n  // string literal.\r\n  var escapes = {\r\n    \"'\": \"'\",\r\n    '\\\\': '\\\\',\r\n    '\\r': 'r',\r\n    '\\n': 'n',\r\n    '\\u2028': 'u2028',\r\n    '\\u2029': 'u2029'\r\n  };\r\n\r\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\r\n\r\n  var escapeChar = function(match) {\r\n    return '\\\\' + escapes[match];\r\n  };\r\n\r\n  // JavaScript micro-templating, similar to John Resig's implementation.\r\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\r\n  // and correctly escapes quotes within interpolated code.\r\n  // NB: `oldSettings` only exists for backwards compatibility.\r\n  _.template = function(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = _.defaults({}, settings, _.templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\r\n  _.chain = function(obj) {\r\n    var instance = _(obj);\r\n    instance._chain = true;\r\n    return instance;\r\n  };\r\n\r\n  // OOP\r\n  // ---------------\r\n  // If Underscore is called as a function, it returns a wrapped object that\r\n  // can be used OO-style. This wrapper holds altered versions of all the\r\n  // underscore functions. Wrapped objects may be chained.\r\n\r\n  // Helper function to continue chaining intermediate results.\r\n  var chainResult = function(instance, obj) {\r\n    return instance._chain ? _(obj).chain() : obj;\r\n  };\r\n\r\n  // Add your own custom functions to the Underscore object.\r\n  _.mixin = function(obj) {\r\n    _.each(_.functions(obj), function(name) {\r\n      var func = _[name] = obj[name];\r\n      _.prototype[name] = function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      };\r\n    });\r\n    return _;\r\n  };\r\n\r\n  // Add all of the Underscore functions to the wrapper object.\r\n  _.mixin(_);\r\n\r\n  // Add all mutator Array functions to the wrapper.\r\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\r\n    var method = ArrayProto[name];\r\n    _.prototype[name] = function() {\r\n      var obj = this._wrapped;\r\n      method.apply(obj, arguments);\r\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\r\n      return chainResult(this, obj);\r\n    };\r\n  });\r\n\r\n  // Add all accessor Array functions to the wrapper.\r\n  _.each(['concat', 'join', 'slice'], function(name) {\r\n    var method = ArrayProto[name];\r\n    _.prototype[name] = function() {\r\n      return chainResult(this, method.apply(this._wrapped, arguments));\r\n    };\r\n  });\r\n\r\n  // Extracts the result from a wrapped and chained object.\r\n  _.prototype.value = function() {\r\n    return this._wrapped;\r\n  };\r\n\r\n  // Provide unwrapping proxy for some methods used in engine operations\r\n  // such as arithmetic and JSON stringification.\r\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\r\n\r\n  _.prototype.toString = function() {\r\n    return String(this._wrapped);\r\n  };\r\n\r\n  // AMD registration happens at the end for compatibility with AMD loaders\r\n  // that may not enforce next-turn semantics on modules. Even though general\r\n  // practice for AMD registration is to be anonymous, underscore registers\r\n  // as a named module because, like jQuery, it is a base library that is\r\n  // popular enough to be bundled in a third party lib, but not be part of\r\n  // an AMD load request. Those cases could generate an error when an\r\n  // anonymous define() is called outside of a loader request.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define('underscore', [], function() {\r\n      return _;\r\n    });\r\n  }\r\n}());\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/underscore/underscore.js\n// module id = 3\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 4\n// module chunks = 0","module.exports = {\"name\":\"uqtools\",\"version\":\"0.0.1\",\"description\":\"UQTools Plotting Widget\",\"author\":\"Markus Jerger\",\"main\":\"src/index.js\",\"keywords\":[\"jupyter\",\"widgets\",\"ipython\",\"ipywidgets\"],\"scripts\":{\"prepublish\":\"webpack\",\"test\":\"echo \\\"Error: no test specified\\\" && exit 1\"},\"devDependencies\":{\"json-loader\":\"^0.5.4\",\"webpack\":\"^1.12.14\"},\"dependencies\":{\"jupyter-js-widgets\":\"^2.1.4\",\"underscore\":\"^1.8.3\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}